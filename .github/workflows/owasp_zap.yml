name: OWASP ZAP

on:
  push:
    branches:
      - security_testing

permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  owasp-zap:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt
      working-directory: src/backend

    - name: Start the application
      run: |
        python src/backend/app.py &
        sleep 10  # Give the app time to start

    - name: Ensure the app is running
      run: |
        curl --retry 5 --retry-connrefused --retry-delay 5 http://localhost:8080


    - name: Run ZAP baseline scan
      run: |
        sudo chmod -R a+w $(pwd)
        docker run --add-host=host.docker.internal:host-gateway \
          -v $(pwd):/zap/wrk -w /zap/wrk ghcr.io/zaproxy/zaproxy:stable \
          /bin/bash -c "zap-baseline.py -t http://host.docker.internal:8080 -a \
            -r zap-report.html -J zap-report.json -x zap-report.xml || true"
    
    - name: List All Files recursively
      run: |
        find . -type f ! -path '*/.*' | sort



    - name: ZAP Scan2
      uses: zaproxy/action-full-scan@v0.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        target: 'https://www.zaproxy.org/'
        cmd_options: '-a'

    - name: List All Files recursively after zap 2
      run: |
        find . -type f ! -path '*/.*' | sort

      
    - name: Upload OWASP ZAP report
      uses: actions/upload-artifact@v4
      with:
        name: zap_report
        path: |
          zap-report.html
          zap-report.json
          zap-report.xml